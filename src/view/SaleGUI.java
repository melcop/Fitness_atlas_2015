package view;

import Bricks.Product;
import Bricks.ProductCategory;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JTextField;
import javax.swing.ListModel;

/**
 *
 * @author Charlie & Eric
 */
public class SaleGUI extends javax.swing.JPanel {
    DefaultListModel dlm=new DefaultListModel();
    DefaultListModel dlm2=new DefaultListModel();
    DefaultListModel dlm3=new DefaultListModel();
    DefaultListModel dlm4=new DefaultListModel();
    DefaultListModel dlm5=new DefaultListModel();
    
    DefaultComboBoxModel dcbm;
    
    /**
     * Creates new form NewSale
     */
    public SaleGUI(List productListFromConstructor, List categoryListFromConstructor) {
        initComponents();
        setProductList(productListFromConstructor);
        setCategoryCB(categoryListFromConstructor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productListJList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        amountTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        priceJList = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        categoryCB = new javax.swing.JComboBox();
        addItemButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsToBeSoldListJList = new javax.swing.JList();
        totalLabel = new javax.swing.JLabel();
        purchaseButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        amountOfItemsToBeSoldJList = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        priceOfItemsToBeSoldJList = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        removeItemButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("List af Varer");

        jScrollPane1.setViewportView(productListJList);

        jLabel2.setText("Kategori");

        jLabel5.setText("Antal");

        jScrollPane3.setViewportView(priceJList);

        jLabel6.setText("Pris");

        addItemButton.setText("Tilf√∏j");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(amountTF)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 132, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(addItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(categoryCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(91, 91, 91))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemButton))
                .addGap(35, 35, 35))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 132;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.insets = new java.awt.Insets(11, 130, 35, 0);
        add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Salg");

        jScrollPane2.setViewportView(itemsToBeSoldListJList);

        totalLabel.setText("Total: 0 kr.");

        purchaseButton.setText("Betal");

        jScrollPane4.setViewportView(amountOfItemsToBeSoldJList);

        jScrollPane5.setViewportView(priceOfItemsToBeSoldJList);

        jLabel7.setText("Antal");

        jLabel8.setText("Pris");

        removeItemButton.setText("Fjern vare");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(184, 184, 184))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(totalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(purchaseButton)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(removeItemButton))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeItemButton)
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchaseButton)
                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 92;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 35, 131);
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Registers a list of products to display on a JList.
     * 
     * @param productList the list of products to display.
     */
    public void setProductList(List<Product> productList) {
    
        dlm.clear();
        
        for(int i = 0; i < productList.size(); i++) {

            dlm.addElement(productList.get(i)); // add elements
        }
        
        productListJList.setModel(dlm);  // set model for jlist
        
        setPriceList(productList);
    }
 
    /**
     * Registers a list of products to display the prices of on a JList.
     * 
     * @param productList the list of product prices to display.
     */
    private void setPriceList(List<Product> productList) {
        List<String> priceList = new ArrayList<String>();
            for(int i = 0; i < productList.size(); i++){
                priceList.add(""+productList.get(i).getSellingPrice());
            }
        dlm2.clear();
      
        for(int i = 0; i < priceList.size(); i++) {
            
             dlm2.addElement(priceList.get(i)); // add elements
         }
             priceJList.setModel(dlm2);  // set model for jlist
    }
    
    /**
     * Registers a list of categories to display in a JComboBox.
     * 
     * @param categoryList the list of categories to display.
     */
    private void setCategoryCB(List<ProductCategory> categoryList){
        dcbm = new DefaultComboBoxModel(categoryList.toArray());
        dcbm.insertElementAt("Alle", 0);
        categoryCB.setModel(dcbm);
        categoryCB.setSelectedIndex(0);
    }   
    
    /**
     * Registers a list of products to display on a JList.
     * Will only display the items that match the category selected in the category-CombBox.
     * 
     * @param productList the list of products to possible display based on a selected category.
     */
    public void setProductListByCategory(List<Product> productList) {
        List<Product> productByCategoryList = new ArrayList<>();
        
        for(Product p : productList) {
            if (p.getCategory().toString().equals(categoryCB.getSelectedItem().toString())) {
                productByCategoryList.add(p);
            }
        }
        
        setProductList(productByCategoryList);
    }
    
    /**
     * Sets up the categoryCB with an ActionListener.
     * 
     * @param al the class with an ActionListener implemented.
     */
    public void addListenerToCategoryCB(ActionListener al) {
        categoryCB.addActionListener(al);
    }
    
    /**
     * Sets up the addItemButton with an ActionListener.
     * 
     * @param al the class with an ActionListener implemented.
     */
    public void addListenerToAddItemButton(ActionListener al) {
        addItemButton.addActionListener(al);
    }
    
    /**
     * Sets up the purchaseButton with an ActionListener.
     * 
     * @param al the class with an ActionListener implemented.
     */
    public void addListenerToPurchaseButton(ActionListener al) {
        purchaseButton.addActionListener(al);
    }
    
    /**
     * Sets up the removeItemButton with an ActionListener.
     * 
     * @param al the class with an ActionListener implemented.
     */
    public void addListenerToRemoveItemButton(ActionListener al) {
        removeItemButton.addActionListener(al);
    }
    
    
    public JComboBox getCategoryCB () {
        return categoryCB;
    }
    
    public void setAmountTF(String n) {
        amountTF.setText(n);
    }
    
    public JTextField getAmountTF() {
        return amountTF;
    }
    
    /**
     * Removes the name, amount and price
     * of a selected product type at the passed parameter, previously added to the shopping list.
     * 
     * @param i 
     */
    public void removeItemFromItemToBeSoldList(int i) {
        dlm3.removeElementAt(i);
        dlm4.removeElementAt(i);
        dlm5.removeElementAt(i);
        setTotalLabel(dlm5);
    }
    
    /**
     * Registers a list of items from the shopping list.
     * The prices of these items will be summed and set as the total price in the totalLabel.
     * 
     * @param priceSumList the list of items' prices will be summed to a total.
     */
    public void setTotalLabel(ListModel<Double> priceSumList) {
        int totalPriceSum = 0;
        
        for (int i = 0; i < priceSumList.getSize(); i++) {
            totalPriceSum += priceSumList.getElementAt(i);
        }
        
        totalLabel.setText("Total: " + totalPriceSum + " kr.");
    }
    
    /**
     * 
     * @param n 
     */
    public void setTotalLabel(int n) {
        totalLabel.setText("Total: " + n + " kr.");
    }
    
    public JLabel getTotalLabel() {
        return totalLabel;
    }
    
    /**
     * Returns the total price from the totalLabel as a double.
     * 
     * @return double
     */
    public double getTotalPrice() {
        return Double.parseDouble(totalLabel.getText().replaceAll("[\\D]", ""));
    }
    
    public JButton getAddItemButton() {
        return addItemButton;
    }
    
    public JButton getRemoveItemButton() {
        return removeItemButton;
    }
    
    public JButton getPurchaseButton() {
        return purchaseButton;
    }
   
    public JList getProductList() {
        return productListJList;
    }
    
    public JList getItemsToBeSoldList() {
        return itemsToBeSoldListJList;
    }
    
    public void setItemsToBeSoldList(Product selectedProduct) {
        dlm3.addElement(selectedProduct);
        itemsToBeSoldListJList.setModel(dlm3);
    }
    
    /**
     * Clears the items and the prices of the purchase lists, as well as the total price.
     */
    public void clearPurchase() {
        dlm3.clear();
        dlm4.clear();
        dlm5.clear();
        setTotalLabel(0);
    }
    
    public JList getAmountOfItemsToBeSoldList() {
        return amountOfItemsToBeSoldJList;
    }
    
    /**
     * Registers an integer and sets an amount of a new item to be added to the shopping list.
     * 
     * 
     * @param n the amount of items to be added to the shopping list.
     */
    public void setAmountOfItemsToBeSoldList(int n) {
        dlm4.addElement(n);
        amountOfItemsToBeSoldJList.setModel(dlm4);
        
        setPriceOfItemsToBeSoldList(itemsToBeSoldListJList.getModel(), amountOfItemsToBeSoldJList.getModel());
    }
    
    /**
     * Registers two integers and sets a new amount of items to be sold for an item already on the shopping list.
     * 
     * 
     * @param i the index at which to insert the new amount of an item to be sold.
     * @param n the amount of items to be added to the shopping list.
     */
    public void setNewAmountOfItemsToBeSold(int i, int n) {
        dlm4.removeElementAt(i);
        dlm4.add(i, n);
        amountOfItemsToBeSoldJList.setModel(dlm4);
        
        setPriceOfItemsToBeSoldList(itemsToBeSoldListJList.getModel(), amountOfItemsToBeSoldJList.getModel());
    }
    
    /**
     * Registers a list of products and a list of integers to multiply each product's price by.
     * The calculated price of each product is added to a new list to be displayed in the priceOfItemsToBeSoldJList.
     * 
     * @param productList the list of products to get the price from.
     * @param amountList the list of integers to multiply the products' prices by.
     */
    private void setPriceOfItemsToBeSoldList(ListModel<Product> productList, ListModel<Integer> amountList){
        double price;
        dlm5.clear();
        
        for(int i = 0; i < amountList.getSize(); i ++) {
            price = productList.getElementAt(i).getSellingPrice();
            price *= amountList.getElementAt(i);
            dlm5.addElement(price);
        }
        priceOfItemsToBeSoldJList.setModel(dlm5);
        setTotalLabel(dlm5);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JList amountOfItemsToBeSoldJList;
    private javax.swing.JTextField amountTF;
    private javax.swing.JComboBox categoryCB;
    private javax.swing.JList itemsToBeSoldListJList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList priceJList;
    private javax.swing.JList priceOfItemsToBeSoldJList;
    private javax.swing.JList productListJList;
    private javax.swing.JButton purchaseButton;
    private javax.swing.JButton removeItemButton;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
