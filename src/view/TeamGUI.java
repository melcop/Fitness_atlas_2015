package view;

import database.InstructorConnection;
import database.MemberConnection;
import database.TeamConnection;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import Bricks.Instructor;
import Bricks.Member;
import Bricks.Team;

/**
 *
 * @author Pelle & Charlie
 */
public class TeamGUI extends javax.swing.JPanel {

    /**
     * Creates new form TeamGUI
     */
    List<Instructor> instructorList;
    List<Team> teamList;
    InstructorConnection instructorConnection = new InstructorConnection();
    TeamConnection teamConnection;
    DefaultListModel listModel = new DefaultListModel();
    DefaultListModel listModel2;
    List<Member> participantsList;
    MemberConnection memberConnection;

    /**
     * Constructor
     */
    public TeamGUI() {
        initComponents();
    }
    
    private boolean checkDublicateParcipant(Member member) {
    
        for (Member m : participantsList) {
            
            if(m.getMemberID() == member.getMemberID()) {
                return false;
            }
        }
        return true;
    }
    
    private boolean isFull(Team team) {
    
        if(Integer.parseInt(team.getMaxParticipants()) >= participantsList.size()+1) {
            return false;
        } else
            return true;
    }
    private void listTotalParticipants() {
    
        int index = teamListJList.getSelectedIndex();
       
        totalParticipantsTF.setText("" +  participantsList.size() + "/" + teamList.get(index).getMaxParticipants());
    }
            
    
    private void setEditableTrue() {
    
        teamNameTF.setEditable(true);
        timeTF.setEditable(true);
        instructorCB.setEnabled(true);
        maxParticipantsTF.setEditable(true);
    }
    private void setEditableFalse() {
    
        teamNameTF.setEditable(false);
        timeTF.setEditable(false);
        maxParticipantsTF.setEditable(false);
        instructorCB.setEnabled(false);
    }
    
    private void clearTextFields() {
    
        teamIDTF.setText("");
        teamNameTF.setText("");
        timeTF.setText("");
        maxParticipantsTF.setText("");
    }
    private void updateTeamList() {
    
            listModel.clear();
            teamList = teamConnection.getTeamList(); //arraylist
            
            for(int i = 0; i < teamList.size(); i++) {

            listModel.addElement(teamList.get(i)); // add elements
             }
            teamListJList.setModel(listModel);  // set model for jlist
            
    }

    private void listParticipants(Team team) {
    
    listModel2 = new DefaultListModel();
    participantsList = teamConnection.getParticipants(team);

        for(int i = 0; i < participantsList.size(); i++) {

        listModel2.addElement(participantsList.get(i).print());
        }
        
        memberJList.setModel(listModel2);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamConnection = new database.TeamConnection();
        teamList = teamConnection.getTeamList();

        teamListJList = new javax.swing.JList();

        for(int i = 0; i < teamList.size(); i++) {

            listModel.addElement(teamList.get(i));
        }
        teamListJList.setModel(listModel);
        newTeamBTN = new javax.swing.JButton();
        removeTeamButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        teamIDTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        teamNameTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        timeTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        maxParticipantsTF = new javax.swing.JTextField();
        editCreateTeamBTN = new javax.swing.JButton();
        instructorCB = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        memberJList = new javax.swing.JList();
        addParticipantBTN = new javax.swing.JButton();
        searchTF = new javax.swing.JTextField();
        removePaticipantBTN = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        totalParticipantsTF = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Hold");

        teamListJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                teamListJListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(teamListJList);

        newTeamBTN.setText("Nyt hold");
        newTeamBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTeamBTNActionPerformed(evt);
            }
        });

        removeTeamButton.setText("Slet hold");
        removeTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTeamButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(removeTeamButton)
                        .addGap(18, 18, 18)
                        .addComponent(newTeamBTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTeamBTN)
                    .addComponent(removeTeamButton))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 76;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        instructorCB.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Info");

        jLabel3.setText("Holdnummer");

        teamIDTF.setEditable(false);

        jLabel4.setText("Holdnavn");

        teamNameTF.setEditable(false);

        jLabel5.setText("Tidspunkt");

        timeTF.setEditable(false);

        jLabel6.setText("InstruktÃ¸r");

        jLabel7.setText("Max antal deltagere");

        maxParticipantsTF.setEditable(false);

        editCreateTeamBTN.setText("Ret");
        editCreateTeamBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCreateTeamBTNActionPerformed(evt);
            }
        });

        instructorCB.setModel(new DefaultComboBoxModel(instructorConnection.getInstructorList().toArray()));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editCreateTeamBTN)
                .addGap(21, 21, 21))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(teamNameTF)
                    .addComponent(jLabel5)
                    .addComponent(timeTF)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(teamIDTF)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(maxParticipantsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructorCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxParticipantsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addComponent(editCreateTeamBTN)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 149;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 0);
        add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Deltagere");

        jScrollPane2.setViewportView(memberJList);

        addParticipantBTN.setText("TilfÃ¸j deltager");
        addParticipantBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addParticipantBTNActionPerformed(evt);
            }
        });

        removePaticipantBTN.setText("Slet deltage");
        removePaticipantBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePaticipantBTNActionPerformed(evt);
            }
        });

        jLabel9.setText("Deltagere:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addParticipantBTN)
                                .addGap(18, 18, 18)
                                .addComponent(removePaticipantBTN))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalParticipantsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(totalParticipantsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addParticipantBTN)
                    .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removePaticipantBTN))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 78;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 10);
        add(jPanel3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void editCreateTeamBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCreateTeamBTNActionPerformed
        
        if(editCreateTeamBTN.getText().equalsIgnoreCase("fÃ¦rdig")) {
            
            Instructor instructor = (Instructor)instructorCB.getSelectedItem();
            Team team = new Team(0, teamNameTF.getText(), timeTF.getText(), maxParticipantsTF.getText(), instructor);
            
            teamConnection.saveTeamToDB(team);
            editCreateTeamBTN.setText("Ret");
            clearTextFields();
            setEditableFalse();
            //update teamList
            updateTeamList();
         
          
        }
        
            else if(editCreateTeamBTN.getText().equalsIgnoreCase("Ret") && teamListJList.getSelectedIndex() >= 0) {
            
            editCreateTeamBTN.setText("Gem");
            setEditableTrue();
            
        }
            else if(editCreateTeamBTN.getText().equalsIgnoreCase("Gem")) {
                
                Team team = teamList.get(teamListJList.getSelectedIndex());
                if(!team.getTeamName().equals(teamNameTF.getText())) {
                    team.setTeamName(teamNameTF.getText());
                }

                if(!team.getTime().equals(timeTF.getText())) {
                    team.setTime(timeTF.getText());
                }
                
                Instructor instructor = (Instructor)instructorCB.getSelectedItem();
                
                if(team.getInstructor().getInstructorID() != instructor.getInstructorID()){
                    team.setInstructor(instructor);
                }

                if(!team.getMaxParticipants().equals(maxParticipantsTF.getText())) {
                    team.setMaxParticipants(maxParticipantsTF.getText());
                }

                teamConnection.editTeam(team);
                editCreateTeamBTN.setText("Ret");
                setEditableFalse();
                listTotalParticipants();
                updateTeamList();
                
        
    }//GEN-LAST:event_editCreateTeamBTNActionPerformed
    }
    private void newTeamBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTeamBTNActionPerformed
        
        
        clearTextFields();
        setEditableTrue();
        editCreateTeamBTN.setText("FÃ¦rdig");
        instructorList = new ArrayList();
        instructorList = instructorConnection.getInstructorList();

        
        
    }//GEN-LAST:event_newTeamBTNActionPerformed

    private void teamListJListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teamListJListMouseReleased
        
       
        int index = teamListJList.getSelectedIndex();
        teamIDTF.setText(""+teamList.get(index).getTeamID());
        teamNameTF.setText(teamList.get(index).getTeamName());
        timeTF.setText(teamList.get(index).getTime());
        maxParticipantsTF.setText(teamList.get(index).getMaxParticipants());
        
        //set new instructorComboBoxModel
        instructorCB.setSelectedIndex(teamList.get(index).getInstructor().getInstructorID() -1);
       
        //set textfeilds to false if user pushes a team
        editCreateTeamBTN.setText("Ret");
        setEditableFalse();
        Team selectedTeam = teamList.get(index);
        listParticipants(selectedTeam);
        listTotalParticipants();
        

        
    }//GEN-LAST:event_teamListJListMouseReleased

    private void addParticipantBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addParticipantBTNActionPerformed
        
        memberConnection = new MemberConnection();
        int memberID = Integer.parseInt(searchTF.getText());
        Member searchedMember = memberConnection.searchMemberID(memberID);
        int index = teamListJList.getSelectedIndex();
        Team selectedTeam = teamList.get(index);
        
        if(!checkDublicateParcipant(searchedMember)) {
        
            JOptionPane.showMessageDialog(null, "Medlemet er allerede pÃ¥ holdet" , "Fejl",
                JOptionPane.ERROR_MESSAGE, null);
            searchTF.setText("");
            return;
        }
        if(isFull(selectedTeam)) {
        
            JOptionPane.showMessageDialog(null, "Holdet er fuldt fjern deltager eller ret holdets max deltagere" , "Hold er fuldt" ,
                JOptionPane.ERROR_MESSAGE, null);
            searchTF.setText("");
            return;
        }

        
        int result = JOptionPane.showOptionDialog(null, "Ãnsker du at tilfÃ¸je " + searchedMember.print() + " til " + selectedTeam.getTeamName(), "BekrÃ¦ft",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
        
        if(JOptionPane.YES_OPTION == result) {
            
            teamConnection.addParticipantToTeam(memberID, selectedTeam.getTeamID());
           
        }
        searchTF.setText("");
        listParticipants(selectedTeam);
        listTotalParticipants();
    }//GEN-LAST:event_addParticipantBTNActionPerformed

    private void removePaticipantBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePaticipantBTNActionPerformed
        
        memberConnection = new MemberConnection();
        int index = teamListJList.getSelectedIndex();
        Team selectedTeam = teamList.get(index);
        String selectedValue = "" + memberJList.getSelectedValue();
        int memberID = Integer.parseInt(selectedValue.replaceAll("[\\D]", "")); 
        Member selectedMember = memberConnection.searchMemberID(memberID);
        
        int result = JOptionPane.showOptionDialog(null, "Er du sikker pÃ¥ at du vil slette medlem: " + selectedMember.print() + " fra " + selectedTeam.getTeamName(), "BekrÃ¦ft",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
        
        
        if(JOptionPane.YES_OPTION == result) {
        
            teamConnection.removeParticipantFromTeam(selectedTeam.getTeamID(), selectedMember.getMemberID());
        }
        listParticipants(selectedTeam);
        listTotalParticipants();
        searchTF.setText("");
        
    }//GEN-LAST:event_removePaticipantBTNActionPerformed

    private void removeTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTeamButtonActionPerformed
       
        int index = teamListJList.getSelectedIndex();
        Team selectedTeam = teamList.get(index);
        
        
        int result = JOptionPane.showOptionDialog(null, "Er du sikker pÃ¥ at du vil slette hold: " +  selectedTeam.getTeamName(), "BekrÃ¦ft",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
        
        
        if(JOptionPane.YES_OPTION == result) {
        
            teamConnection.removeTeam(selectedTeam.getTeamID());
        }
        updateTeamList();
        
    }//GEN-LAST:event_removeTeamButtonActionPerformed
// Der skal laves en remove team button

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addParticipantBTN;
    private javax.swing.JButton editCreateTeamBTN;
    private javax.swing.JComboBox instructorCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField maxParticipantsTF;
    private javax.swing.JList memberJList;
    private javax.swing.JButton newTeamBTN;
    private javax.swing.JButton removePaticipantBTN;
    private javax.swing.JButton removeTeamButton;
    private javax.swing.JTextField searchTF;
    private javax.swing.JTextField teamIDTF;
    private javax.swing.JList teamListJList;
    private javax.swing.JTextField teamNameTF;
    private javax.swing.JTextField timeTF;
    private javax.swing.JLabel totalParticipantsTF;
    // End of variables declaration//GEN-END:variables
}
